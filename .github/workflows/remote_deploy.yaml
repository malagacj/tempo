name: Manual SSH Trigger

on:
  workflow_dispatch:
    inputs:
      TEMPO_HTTP_PORT:
        description: 'TEMPO_HTTP_PORT'
        required: true
        default: '3200'
        type: string
      JAEGER_INGEST_PORT:
        description: 'JAEGER_INGEST_PORT'
        required: true
        default: '14268'
        type: string
      command:
        description: 'Choose a command to run'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - stop
          - stop_and_deploy
          - purge
          - purge_and_deploy

env:
  DEPLOYMENT_DIR: "gha_deployments/tempo/manual"

jobs:
  copy-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create deployment folder
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_NAME }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.ID_RSA_GITHUB_MALAGACJ }}
          script: mkdir -p "${{ env.DEPLOYMENT_DIR }}"

      - name: Copy artifact files
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_NAME }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.ID_RSA_GITHUB_MALAGACJ }}
          source: "docker-compose.yaml,tempo.yaml"
          target: "${{ env.DEPLOYMENT_DIR }}"

  deploy:
    runs-on: ubuntu-latest
    needs: copy-artifact
    steps:
      - name: Determine remote command
        id: set_cmd
        run: |
          CMD="cd $DEPLOYMENT_DIR"
          case "${{ github.event.inputs.command }}" in
            deploy)
              CMD="$CMD && docker compose up -d"
              ;;
            stop)
              CMD="$CMD && docker compose down"
              ;;
            stop_and_deploy)
              CMD="$CMD && docker compose down && docker compose up -d"
              ;;
            purge)
              CMD="$CMD && docker compose down -v --rmi all"
              ;;
            purge_and_deploy)
              CMD="$CMD && docker compose down -v --rmi all && docker compose up -d"
              ;;
            *)
              echo "Unknown command"
              exit 1
              ;;
          esac
          echo "cmd=echo \"Running action: ${{ github.event.inputs.command }}\" && $CMD" >> "$GITHUB_OUTPUT"

      - name: Run remote command via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_NAME }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.ID_RSA_GITHUB_MALAGACJ }}
          script: ${{ steps.set_cmd.outputs.cmd }}
